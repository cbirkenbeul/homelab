---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: uninstall
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      lidarr:

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: lidarr-dbinit-secret

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/lidarr
              tag: 2.4.3.4248
            env:
              TZ: ${TIMEZONE}
              lidarr__PORT: &port 8686
            envFrom:
              - secretRef:
                  name: lidarr-secret
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: lidarr.png
          gethomepage.dev/name: Lidarr
          gethomepage.dev/widget.type: lidarr
          gethomepage.dev/group: Media
          gethomepage.dev/widget.url: http://lidarr.media.svc.cluster.local:7878
          gethomepage.dev/widget.key: '{{ "{{HOMEPAGE_VAR_LIDARR_API_KEY}}" }}'
        hosts:
          - host: &host "lidarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    defaultPodOptions:
      securityContext:
        runAsUser: 568 # ${APP_UID}
        runAsGroup: 568 # ${APP_GID}
        fsGroup: 568 # ${APP_GID}
        fsGroupChangePolicy: "OnRootMismatch"

    persistence:
      config:
        existingClaim: *app
      media:
        type: nfs
        server: &nas 'nas.${SECRET_DOMAIN}'
        path: /mnt/user/media
        globalMounts:
          - path: /media