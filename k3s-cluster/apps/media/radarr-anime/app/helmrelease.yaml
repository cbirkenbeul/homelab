---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr-anime
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: radarr-anime-dbinit-secret

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.2.6.8376
            env:
              TZ: ${TIMEZONE}
              COMPlus_EnableDiagnostics: "0"
              RADARR__PORT: &port 7878
              RADARR__POSTGRES_HOST: pgsql01.casalani.de
              RADARR__POSTGRES_MAIN_DB: radarr-anime
              RADARR__POSTGRES_LOG_DB: radarr-anime_logs
              RADARR__POSTGRES_USER: postgres
              RADARR__POSTGRES_PASSWORD: ${SECRET_POSTGRES_ADMIN_PASS}
            envFrom: 
              - secretRef:
                  name: radarr-anime-secret
                  # name: radarr-anime-apikey
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: Radarr (Anime)
          hajimari.io/icon: mdi:filmstrip
        hosts:
          - host: &host "radarr-anime.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        type: nfs
        server: &nas 'nas.${SECRET_DOMAIN}'
        path: /mnt/user/media
        mountPath: /media
        globalMounts:
          - path: /media