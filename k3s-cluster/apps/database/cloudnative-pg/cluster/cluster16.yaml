---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
  namespace: database
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  #bootstrap:
  #  recovery:
  #    source: &previous-cluster postgres-v2
  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://s3.casalani.de
      serverName: &currentCluster postgres16
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  #externalClusters:
  #  - name: *previous-cluster
  #    barmanObjectStore:
  #      wal:
  #        compression: bzip2
  #        maxParallel: 8
  #      destinationPath: s3://postgresql/
  #      endpointURL: "https://s3.${SECRET_DOMAIN}"
  #      s3Credentials:
  #        accessKeyId:
  #          name: cloudnative-pg-secret
  #          key: aws-access-key-id
  #        secretAccessKey:
  #          name: cloudnative-pg-secret
  #          key: aws-secret-access-key