---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  generate-config:
    desc: Generate Talos configuration
    cmd: talhelper genconfig --config-file {{.TALHELPER_CONFIG_FILE}} --secret-file {{.TALHELPER_SECRET_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}}
    preconditions:
      - test -f {{.TALHELPER_CONFIG_FILE}}
      - test -f {{.SOPS_CONFIG_FILE}}
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which talhelper

  apply-node:
    desc: Apply Talos config to a node [IP=required]
    cmd: talhelper gencommand apply --node {{.IP}} --config-file {{.TALHELPER_CONFIG_FILE}} --secret-file {{.TALHELPER_SECRET_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags '--mode={{.MODE}}' | bash
    vars:
      MODE: '{{.MODE | default "auto"}}'
    requires:
      vars: [IP]
    preconditions:
      - talosctl --nodes {{.IP}} get machineconfig
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  upgrade-node:
    desc: Upgrade Talos on a single node [IP=required]
    cmd: talhelper gencommand upgrade --node {{.IP}} --config-file {{.TALHELPER_CONFIG_FILE}} --secret-file {{.TALHELPER_SECRET_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags "--image='factory.talos.dev/installer{{if eq .TALOS_SECUREBOOT "true"}}-secureboot{{end}}/{{.TALOS_SCHEMATIC_ID}}:{{.TALOS_VERSION}}' --timeout=10m" | bash
    vars:
      TALOS_SCHEMATIC_ID:
        sh: yq '.nodes[] | select(.ipAddress == "{{.IP}}") | .talosImageURL' {{.TALHELPER_CONFIG_FILE}} | awk -F/ '{print $NF}'
      TALOS_SECUREBOOT:
        sh: yq '.nodes[] | select(.ipAddress == "{{.IP}}") | .machineSpec.secureboot' {{.TALHELPER_CONFIG_FILE}}
      TALOS_VERSION:
        sh: yq '.talosVersion' {{.TALHELPER_CONFIG_FILE}}
    requires:
      vars: [IP]
    preconditions:
      - talosctl --nodes {{.IP}} get machineconfig
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which kubectl talhelper talosctl yq

  upgrade-k8s:
    desc: Upgrade Kubernetes
    cmd: talhelper gencommand upgrade-k8s --config-file {{.TALHELPER_CONFIG_FILE}}  --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags "--to '{{.KUBERNETES_VERSION}}'" | bash
    vars:
      KUBERNETES_VERSION:
        sh: yq '.kubernetesVersion' {{.TALHELPER_CONFIG_FILE}}
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  reset:
    desc: Resets nodes back to maintenance mode
    dir: "{{.KUBERNETES_DIR}}/bootstrap/talos"
    prompt: This will destroy your cluster and reset the nodes back to maintenance mode... continue?
    cmd: talhelper gencommand reset --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags="--reboot {{- if eq .CLI_FORCE false }} --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL{{ end }} --graceful=false --wait=false" | bash
  preconditions:
    - which talhelper