---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres17
  namespace: database
spec:
  instances: 3
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql repository=ghcr.io
  imageName: ghcr.io/cloudnative-pg/postgresql:17.4
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true

  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 7d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://teqqy-cnpg-backup-cluster17/
      endpointURL: https://s3.us-west-002.backblazeb2.com
      serverName: &currentCluster postgres17-001
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: b2-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: b2-secret-access-key


  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres17-001

  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster