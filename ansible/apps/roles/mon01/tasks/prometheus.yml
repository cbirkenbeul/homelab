---
- name: Create app directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ docker_dir }}/prometheus"

- name: Create prometheus data directory
  ansible.builtin.file:
    path: "{{ docker_dir }}/prometheus/data"
    state: directory
    mode: '0777'
    access_time: preserve
    modification_time: preserve

- name: Create prometheus config directory
  ansible.builtin.file:
    path: "{{ docker_dir }}/prometheus/config"
    state: directory
    mode: '0755'
    access_time: preserve
    modification_time: preserve

- name: Create sprometheus.yml file
  ansible.builtin.copy:
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      rule_files:
      scrape_configs:
        - job_name: 'blocky'
          static_configs:
            - targets: ['blky01.casalani.de:4000']
        - job_name: 'unraid'
          static_configs:
            - targets: ['nas.casalani.de:9100']
        - job_name: 'hosts'
          static_configs:
            - targets: ['gw01.casalani.de:9100', 'dkr01.casalani.de:9100', 'app01.casalani.de:9100', 'media01.casalani.de:9100']
        - job_name: 'rpi'
          static_configs:
            - targets: ['blky01.casalani.de:9100']
        - job_name: minio-job
          bearer_token: " {{ SECRET_MINIO_PROMETHEUS_TOKEN }}"
          metrics_path: /minio/v2/metrics/cluster
          scheme: http
          static_configs:
          - targets: ['192.168.10.108:9000']
    dest: "{{ docker_dir }}/prometheus/config/prometheus.yml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Deploy prometheus with docker container
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:v2.45.0
    restart_policy: unless-stopped
    state: started
    recreate: true
    networks:
      - name: homelab
    volumes:
      - "{{ docker_dir }}/prometheus/data:/prometheus"
      - "{{ docker_dir }}/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml"
    env:
      TZ: "{{ TZ }}"
    ports:
      - "9090:9090"
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus.rule: "Host(`prometheus.{{ SECRET_DOMAIN }}`)"
      traefik.http.routers.prometheus.entrypoints: "https"
      traefik.http.routers.prometheus.tls.certresolver: "letsencrypt"
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
