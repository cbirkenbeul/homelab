---
- name: Create app directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ docker_dir }}/homepage"

- name: Create homepage data directory
  ansible.builtin.file:
    path: "{{ docker_dir }}/homepage/data"
    state: directory
    mode: '0755'
    access_time: preserve
    modification_time: preserve

- name: Create settings.yaml file
  ansible.builtin.copy:
    content: |
      layout:
        Medien:
          style: row
          columns: 4
    dest: "{{ docker_dir }}/homepage/data/settings.yaml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create widgets.yaml file
  ansible.builtin.copy:
    content: |
      - resources:
          cpu: true
          memory: true
          disk: /

      - search:
          provider: duckduckgo
          target: _blank
    dest: "{{ docker_dir }}/homepage/data/widgets.yaml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create bookmarks.yaml file
  ansible.builtin.copy:
    content: |
      - Developer:
          - Github:
              - abbr: GH
                href: https://github.com/

      - Social:
          - Reddit:
              - abbr: RE
                href: https://reddit.com/

      - Entertainment:
          - YouTube:
              - abbr: YT
                href: https://youtube.com/
    dest: "{{ docker_dir }}/homepage/data/bookmarks.yaml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create docker.yaml file
  ansible.builtin.copy:
    content: |
      docker:
        socket: /var/run/docker.sock
    dest: "{{ docker_dir }}/homepage/data/docker.yaml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create services.yaml file
  ansible.builtin.copy:
    content: |
      - Medien:
        - Jellyfin:
            href: "{{ SECRET_HOMEPAGE_JELLYFIN_URL }}"
            widget:
              type: jellyfin
              url: "{{ SECRET_HOMEPAGE_JELLYFIN_URL }}"
              key: "{{ SECRET_HOMEPAGE_JELLYFIN_KEY }}"
        - radarr:
            href: "{{ SECRET_HOMEPAGE_RADARR_URL }}"
            widget:
              type: radarr
              url: "{{ SECRET_HOMEPAGE_RADARR_URL }}"
              key: "{{ SECRET_HOMEPAGE_RADARR_KEY }}"
        - radarr-4k:
            href: "{{ SECRET_HOMEPAGE_RADARR4k_URL }}"
            widget:
              type: radarr
              url: "{{ SECRET_HOMEPAGE_RADARR4k_URL }}"
              key: "{{ SECRET_HOMEPAGE_RADARR4k_KEY }}"
        - radarr-anime:
            href: "{{ SECRET_HOMEPAGE_RADARRANIME_URL }}"
            widget:
              type: radarr
              url: "{{ SECRET_HOMEPAGE_RADARRANIME_URL }}"
              key: "{{ SECRET_HOMEPAGE_RADARRANIME_KEY }}"
        - sonarr:
            href: "{{ SECRET_HOMEPAGE_SONARR_URL }}"
            widget:
              type: sonarr
              url: "{{ SECRET_HOMEPAGE_SONARR_URL }}"
              key: "{{ SECRET_HOMEPAGE_SONARR_KEY }}"
        - sabnzbd:
            href: "{{ SECRET_HOMEPAGE_SABNZBD_URL }}"
            widget:
              type: sabnzbd
              url: "{{ SECRET_HOMEPAGE_SABNZBD_URL }}"
              key: "{{ SECRET_HOMEPAGE_SABNZBD_KEY }}"
      - Netzwerk:
        - Unifi Controller:
            href: "{{ SECRET_HOMEPAGE_UNIFI_URL }}"
            widget:
              type: unifi
              url: "{{ SECRET_HOMEPAGE_UNIFI_URL }}"
              username: "{{ SECRET_HOMEPAGE_UNIFI_USER }}"
              password: "{{ SECRET_HOMEPAGE_UNIFI_PASSWORD }}"
        - opnSense:
            href: "{{ SECRET_HOMEPAGE_OPNSENSE_URL }}"
            widget:
              type: opnsense
              url: "{{ SECRET_HOMEPAGE_OPNSENSE_URL }}"
              username: "{{ SECRET_HOMEPAGE_OPNSENSE_USER }}"
              password: "{{ SECRET_HOMEPAGE_OPNSENSE_PASSWORD }}"
        - Uptime Kuma:
            href: "{{ SECRET_HOMEPAGE_UPTIMEKUMA_URL }}"
            widget:
              type: uptimekuma
              url: "{{ SECRET_HOMEPAGE_UPTIMEKUMA_URL }}"
              slug: homepage
      - Home:
        - Paperless-NGX:
            href: "{{ SECRET_HOMEPAGE_PAPERLESS_URL }}"
            widget:
              type: paperlessngx
              url: {{ SECRET_HOMEPAGE_PAPERLESS_URL }}
              username: {{ SECRET_HOMEPAGE_PAPERLESS_USER }}
              password: {{ SECRET_HOMEPAGE_PAPERLESS_PASSWORD }}
    dest: "{{ docker_dir }}/homepage/data/services.yaml"
    mode: '0644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Deploy homepage with docker container
  community.docker.docker_container:
    name: homepage
    image: ghcr.io/benphelps/homepage:v0.6.20
    restart_policy: unless-stopped
    state: started
    recreate: true
    networks:
      - name: homelab
    volumes:
      - "{{ docker_dir }}/homepage/data:/app/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.homepage.rule: "Host(`homepage.{{ SECRET_DOMAIN }}`)"
      traefik.http.routers.homepage.entrypoints: "https"
      traefik.http.routers.homepage.tls.certresolver: "letsencrypt"
      traefik.http.services.homepage.loadbalancer.server.port: "3000"
