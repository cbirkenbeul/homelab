---
version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-server.sh"]
    volumes:
      - {{ containers_base_dir }}/data/immich:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME={{ SECRET_POSTGRES_SERVER }}
      - DB_USERNAME=immich
      - DB_PASSWORD={{ SECRET_IMMICH_POSTGRES_PASSWORD }}
      - DB_DATABASE_NAME=immich
    depends_on:
      - redis
    restart: unless-stopped

  immich-microservices:
    container_name: immich_microservices
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "./start-microservices.sh"]
    volumes:
      - {{ containers_base_dir }}/data/immich:/usr/src/app/upload
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME={{ SECRET_POSTGRES_SERVER }}
      - DB_USERNAME=immich
      - DB_PASSWORD={{ SECRET_IMMICH_POSTGRES_PASSWORD }}
      - DB_DATABASE_NAME=immich
    depends_on:
      - redis
    restart: unless-stopped

#  immich-machine-learning:
#    container_name: immich_machine_learning
#    image: altran1502/immich-machine-learning:release
#    entrypoint: ["/bin/sh", "./entrypoint.sh"]
#    volumes:
#      - {{ containers_base_dir }}/data/immich:/usr/src/app/upload
#    environment:
#      - NODE_ENV=production
#      - DB_HOSTNAME={{ SECRET_POSTGRES_SERVER }}
#      - DB_USERNAME=immich
#      - DB_PASSWORD={{ SECRET_IMMICH_POSTGRES_PASSWORD }}
#      - DB_DATABASE_NAME=immich
#    restart: unless-stopped

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: unless-stopped

  immich-web:
    container_name: immich_web
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    restart: unless-stopped

  immich-proxy:
    container_name: immich_proxy
    image: altran1502/immich-proxy:release
    environment:
      - IMMICH_SERVER_URL=http://immich-server:3001
      - IMMICH_WEB_URL=http://immich-web:3000
    depends_on:
      - immich-server
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.immich.rule=Host(`immich.{{ SECRET_DOMAIN }}`)
      - traefik.http.routers.immich.entrypoints=websecure
      - traefik.http.routers.immich.tls.certresolver=letsencrypt
      - traefik.http.services.immich.loadbalancer.server.port=8080
    networks:
      - traefik_proxy
      - default

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
