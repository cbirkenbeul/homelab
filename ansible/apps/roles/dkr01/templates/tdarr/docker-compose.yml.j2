---
version: "3.4"
services:
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=192.168.10.22
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeName=MyInternalNode
    volumes:
      - /docker/data/tdarr:/app/server
      - /docker/config/tdarr:/app/configs
      - /mnt/media:/media
      - /tmp:/temp
    labels:
      - traefik.enable=true
      - traefik.http.routers.tdarr.rule=Host(`tdarr.{{ SECRET_DOMAIN }}`)
      - traefik.http.routers.tdarr.entrypoints=websecure
      - traefik.http.routers.tdarr.tls.certresolver=letsencrypt
      - traefik.http.services.tdarr.loadbalancer.server.port=8265
    ports:
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
    networks:
      - traefik_proxy
      - default


# node example
  tdarr-node:
    container_name: tdarr-node
    image: ghcr.io/haveagitgat/tdarr_node:latest
    restart: unless-stopped
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - nodeName=MainNode
      - serverIP=192.168.10.22
      - serverPort=8266
    volumes:
      - /docker/config/tdarr:/app/configs
      - /mnt/media:/media
      - /tmp:/temp

networks:
  traefik_proxy:
      name: traefik_proxy
      external: true
  default:
    driver: bridge
